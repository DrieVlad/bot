package boostbrain;

import java.util.ArrayList;
import java.util.Random;


public class Bot {
    public final FSMStack fsm = new FSMStack();
    public boolean flagMillionaire = false;
    public Message message = new Message();
    private static Statistic stats;

    public Bot(Statistic stat) {
        fsm.pushState(this::start);
        stats = stat;
    }
    
    public Message start(Message userInput) {
        ArrayList<String> row = new ArrayList<>();
        ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
        fsm.popState();
        fsm.pushState(this::launch);
        message.setTextMessage("ü¶Ü–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!üëã\n" + PhrasesBot.s_aboutMe);
        row.add("–ò–≥—Ä–∞");
        row.add("–î–∏–∞–ª–æ–≥");
        keyboard.add(row);
        row = new ArrayList<>();
        setHelpAndTired(row, keyboard);
        return message;
    }

    private Message launch(Message userInput) {
        ArrayList<String> row = new ArrayList<>();
        ArrayList<ArrayList<String>> keyboard = new ArrayList<>();        
        switch (userInput.getTextMessage()) {
        case ("–∏–≥—Ä–∞"):
            fsm.popState();
            fsm.pushState(this::twoGame);
            message.setTextMessage("–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–≤–µ –∏–≥—Ä—ã –Ω–∞ –≤—ã–±–æ—Ä: \"–ì–æ—Ä–æ–¥–∞\"üèò –∏ \"–ú–∏–ª–ª–∏–æ–Ω–µ—Ä\"üí∞. \n"
                    + "–ü–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–π –∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—åüòä. \n"
                    + "–í–æ —á—Ç–æ –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å‚ùî");
            row.add("–ì–æ—Ä–æ–¥–∞");
            row.add("–ú–∏–ª–ª–∏–æ–Ω–µ—Ä");
            keyboard.add(row);
            row = new ArrayList<>();
            setHelpAndTired(row, keyboard);
            return message;
        case ("–¥–∏–∞–ª–æ–≥"):
            fsm.popState();
            fsm.pushState(this::dialogueQuestion);
            message.setTextMessage("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?üë§");
            setHelpAndTired(row, keyboard);
            return message;
        case (""):
            fsm.popState();
            fsm.pushState(this::launch);
            message.setTextMessage("–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å‚ò∫");
            return message;
        default:
            fsm.popState();
            fsm.pushState(this::launch);
            message.setTextMessage("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª‚òπ");
            return message;        
        }
    }

    private Message dialogueQuestion(Message userInput)
    {        
        int count1;
        int count2;
        Random randomer = new Random();
        count1 = randomer.nextInt(PhrasesBot.s_questions.length);
        count2 = randomer.nextInt(PhrasesBot.s_phrases.length);
        message.setTextMessage(PhrasesBot.s_phrases[count2] + " " + PhrasesBot.s_questions[count1]);
        return message;        
    }
        
    private Message twoGame(Message userInput) {
        Game game = null;
        switch (userInput.getTextMessage()) {
        case ("–≥–æ—Ä–æ–¥–∞"):
            game = new Towns(this);
            break;
        case ("–º–∏–ª–ª–∏–æ–Ω–µ—Ä"):        
            game = new Millionaire(this, stats);
            break;
        default:            
            fsm.popState();
            fsm.pushState(this::twoGame);
            message.setTextMessage("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª‚òπ");
            return message;
        }
        fsm.popState();
        fsm.pushState(game::reply);
        return reply(userInput);            
    }
    
    public void setHelpAndTired(ArrayList<String> row, ArrayList<ArrayList<String>> keyboard)
    {
        row.add("–ü–æ–º–æ—â—å");
        row.add("–£—Å—Ç–∞–ª");
        keyboard.add(row);
        message.setKeyboard(keyboard);
    }

    public Message reply(Message userInput)
    {
        ArrayList<String> rowButtons = new ArrayList<>();
        ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
        message = fsm.update(userInput);
        
        switch(userInput.getTextMessage()) 
        {
            case("–ø–æ–º–æ—â—å"):
                message.setTextMessage("‚Ñπ" + PhrasesBot.s_aboutMe);
                break;
            case("—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"):
                String in = Long.toString(userInput.getChatId());
                message = stats.get(in);
                break;
            case("—É—Å—Ç–∞–ª"):
                fsm.stackReboot(this::launch);
                message.setTextMessage("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®");
                rowButtons.add("–ò–≥—Ä–∞");
                rowButtons.add("–î–∏–∞–ª–æ–≥");
                keyboard.add(rowButtons);
                rowButtons = new ArrayList<>();
                setHelpAndTired(rowButtons, keyboard);
                break;
            case("–ø–æ–∫–∞"):
                fsm.stackReboot(this::start);
                message.setTextMessage("–î–æ —Å–∫–æ—Ä–æ–≥–æ!üëã –Ø –≤—Å–µ–≥–¥–∞ –∫ —Ç–≤–æ–∏–º —É—Å–ª—É–≥–∞–ºü¶Ü \n");
                rowButtons.add("–Ø —Å–∫—É—á–∞—é!");
                keyboard.add(rowButtons);
                message.setKeyboard(keyboard);               
        }    
        return message;        
    }    
}