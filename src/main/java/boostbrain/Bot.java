package boostbrain;

import java.util.ArrayList;


public class Bot {
    public final FSMStack fsm = new FSMStack();
    public boolean flagMillionaire = false;
    public Message message = new Message();
    private static Statistic stats;
    private Firebase firebase;
    private CriticismReaction critic = new CriticismReaction(stats);

    public Bot(Statistic stat) {
        fsm.pushState(this::start);
        stats = stat;
        firebase = stats.firebase;
    }

    public Message start(Message userInput) {
        ArrayList<String> row = new ArrayList<>();
        ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
        fsm.popState();
        fsm.pushState(this::launch);
        //message.setTextMessage("ü¶Ü–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!üëã\n" + PhrasesBot.s_aboutMe);
        message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–ø—Ä–∏–≤–µ—Ç"));
        row.add("–ò–≥—Ä–∞");
        row.add("–î–∏–∞–ª–æ–≥");
        keyboard.add(row);
        row = new ArrayList<>();
        setHelpAndTired(row, keyboard);
        return message;
    }

    private Message launch(Message userInput) {
        ArrayList<String> row = new ArrayList<>();
        ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
        switch (userInput.getTextMessage()) {
            case ("–∏–≥—Ä–∞"):
                fsm.popState();
                fsm.pushState(this::twoGame);
                //message.setTextMessage("–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–≤–µ –∏–≥—Ä—ã –Ω–∞ –≤—ã–±–æ—Ä: \"–ì–æ—Ä–æ–¥–∞\"üèò –∏ \"–ú–∏–ª–ª–∏–æ–Ω–µ—Ä\"üí∞. \n"
                //       + "–ü–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–π –∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—åüòä. \n"
                //      + "–í–æ —á—Ç–æ –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å‚ùî");
                message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–≤—ã–±–æ—Ä–∏–≥—Ä–∞"));
                row.add("–ì–æ—Ä–æ–¥–∞");
                row.add("–ú–∏–ª–ª–∏–æ–Ω–µ—Ä");
                keyboard.add(row);
                row = new ArrayList<>();
                setHelpAndTired(row, keyboard);
                return message;
            case ("–¥–∏–∞–ª–æ–≥"):
                fsm.popState();
                fsm.pushState(this::dialogueQuestion);
                message.setTextMessage("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?üë§");
                setHelpAndTired(row, keyboard);
                return message;
            case (""):
                fsm.popState();
                fsm.pushState(this::launch);
                //message.setTextMessage("–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å‚ò∫");
                message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–ø—Ä–∏–∑—ã–≤—ã"));
                return message;
            default:
                fsm.popState();
                fsm.pushState(this::launch);
                //message.setTextMessage("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª‚òπ");
                message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ"));

                return message;
        }
    }

    private Message dialogueQuestion(Message userInput) {
        String count1;
        String count2;
        count1 = firebase.getDialogFromDatabase("–æ—Ç–≤–µ—Ç");
        count2 = firebase.getDialogFromDatabase("–≤–æ–ø—Ä–æ—Å");
        message.setTextMessage(count1 + " " + count2);
        return message;
    }

    private Message twoGame(Message userInput) {
        Game game = null;
        switch (userInput.getTextMessage()) {
            case ("–≥–æ—Ä–æ–¥–∞"):
                game = new Towns(this, stats.firebase);
                break;
            case ("–º–∏–ª–ª–∏–æ–Ω–µ—Ä"):
                game = new Millionaire(this, stats);
                break;
            default:
                fsm.popState();
                fsm.pushState(this::twoGame);
                //message.setTextMessage("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª‚òπ");
                message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ"));
                return message;
        }
        fsm.popState();
        fsm.pushState(game::reply);
        return reply(userInput);
    }

    public void setHelpAndTired(ArrayList<String> row, ArrayList<ArrayList<String>> keyboard) {
        row.add("–ü–æ–º–æ—â—å");
        row.add("–£—Å—Ç–∞–ª");
        keyboard.add(row);
        message.setKeyboard(keyboard);
    }

    public Message reply(Message userInput) {
        ArrayList<String> rowButtons = new ArrayList<>();
        ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
        message = fsm.update(userInput);

        if (critic.isCritics(userInput.getChatId(), userInput.getTextMessage())){
            message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","—Ä—É–≥–∞–Ω—å"));
        }
        else {
            switch (userInput.getTextMessage()) {
                case ("–ø–æ–º–æ—â—å"):
                    message.setTextMessage("‚Ñπ" + PhrasesBot.s_aboutMe);
                    break;
                case ("—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"):
                    String in = Long.toString(userInput.getChatId());
                    message = stats.get(in);
                    break;
                case ("—É—Å—Ç–∞–ª"):
                    fsm.stackReboot(this::launch);
                    //message.setTextMessage("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®");

                    message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–≤—ã–±–æ—Ä"));
                    rowButtons.add("–ò–≥—Ä–∞");
                    rowButtons.add("–î–∏–∞–ª–æ–≥");
                    keyboard.add(rowButtons);
                    rowButtons = new ArrayList<>();
                    setHelpAndTired(rowButtons, keyboard);
                    break;
                case ("–ø–æ–∫–∞"):
                    fsm.stackReboot(this::start);
                    message.setTextMessage(firebase.getPhraseFromDatabase("—Ñ—Ä–∞–∑—ã","–ø–æ–∫–∞"));
                    //message.setTextMessage("–î–æ —Å–∫–æ—Ä–æ–≥–æ!üëã –Ø –≤—Å–µ–≥–¥–∞ –∫ —Ç–≤–æ–∏–º —É—Å–ª—É–≥–∞–ºü¶Ü \n");
                    rowButtons.add("–Ø —Å–∫—É—á–∞—é!");
                    keyboard.add(rowButtons);
                    message.setKeyboard(keyboard);
            }
        }


        return message;
    }
}