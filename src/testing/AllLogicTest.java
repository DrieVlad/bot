package testing;

import static org.junit.Assert.*;
import org.junit.jupiter.api.Test;
import chatBot.Bot;
import chatBot.PhrasesBot;


public class AllLogicTest {
	private static Bot bot = new Bot();
	private static String botAnswer = "";
		
	@Test
	public void startBotTest() 
	{		
		botAnswer = bot.start(" ");
		assertEquals("ü¶Ü–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!üëã\n" + PhrasesBot.s_aboutMe, botAnswer);
	}
	
	@Test
	public void townsBotTest() 
	{
		botAnswer = bot.reply("—É—Å—Ç–∞–ª");
	    assertEquals("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®", botAnswer);
		botAnswer = bot.reply("–∏–≥—Ä–∞");
		assertEquals("–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–≤–µ –∏–≥—Ä—ã –Ω–∞ –≤—ã–±–æ—Ä: \"–ì–æ—Ä–æ–¥–∞\"üèò –∏ \"–ú–∏–ª–ª–∏–æ–Ω–µ—Ä\"üí∞. \n"
				+ "–ü–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–π –∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—åüòä. \n"
				+ "–í–æ —á—Ç–æ –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å‚ùî", botAnswer);	
		botAnswer = bot.reply("–≥–æ—Ä–æ–¥–∞");
	    assertTrue(botAnswer.startsWith("–ú–æ–π —Ö–æ–¥"));
	}
	
	@Test
	public void dialogueBotTest()
	{
		botAnswer = bot.reply("—É—Å—Ç–∞–ª");
	    assertEquals("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®", botAnswer);
	    botAnswer = bot.reply("–¥–∏–∞–ª–æ–≥");
	    assertEquals("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?üë§", botAnswer);	
	}
	
	@Test
	public void emptyLineBotTest()
	{
		botAnswer = bot.reply("—É—Å—Ç–∞–ª");
	    assertEquals("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®", botAnswer);
	    botAnswer = bot.reply("");
	    assertEquals("–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å‚ò∫", botAnswer);	
	}
	
	@Test
	public void incorrectInputBotTest()
	{
		botAnswer = bot.reply("—É—Å—Ç–∞–ª");
	    assertEquals("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®", botAnswer);
	    botAnswer = bot.reply("lalala");
	    assertEquals("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª‚òπ", botAnswer);	
	}
	
	@Test
	public void helpBotTest()
	{
		botAnswer = bot.reply("–ø–æ–º–æ—â—å");
		assertEquals("‚Ñπ" + PhrasesBot.s_aboutMe, botAnswer);
	}
	
	@Test
	public void millionaireBotTest()
	{
		botAnswer = bot.reply("—É—Å—Ç–∞–ª");
	    assertEquals("–ü–æ–∏–≥—Ä–∞–µ–º –∏–ª–∏ –ø–æ–æ–±—â–∞–µ–º—Å—è?üòè –ü–∏—à–∏: \"–∏–≥—Ä–∞\"üïπ –∏–ª–∏ \"–¥–∏–∞–ª–æ–≥\"üì®", botAnswer);
	    botAnswer = bot.reply("–∏–≥—Ä–∞");
		assertEquals("–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–≤–µ –∏–≥—Ä—ã –Ω–∞ –≤—ã–±–æ—Ä: \"–ì–æ—Ä–æ–¥–∞\"üèò –∏ \"–ú–∏–ª–ª–∏–æ–Ω–µ—Ä\"üí∞. \n"
				+ "–ü–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–π –∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—åüòä. \n"
				+ "–í–æ —á—Ç–æ –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å‚ùî", botAnswer);	
		botAnswer = bot.reply("–º–∏–ª–ª–∏–æ–Ω–µ—Ä");
	    assertTrue(botAnswer.startsWith("–í–æ–ø—Ä–æ—Å ‚Ññ"));	
	}
	
	@Test
	public void endBotTest()
	{
		String botAnswer = bot.reply("–ø–æ–∫–∞");
	    assertEquals("–î–æ —Å–∫–æ—Ä–æ–≥–æ!üëã –Ø –≤—Å–µ–≥–¥–∞ –∫ —Ç–≤–æ–∏–º —É—Å–ª—É–≥–∞–ºü¶Ü \n", botAnswer);	
	}	
}
