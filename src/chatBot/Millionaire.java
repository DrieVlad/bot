package chatBot;

import java.util.ArrayList;

public class Millionaire implements Game
{
	private MillionaireContent reader = new MillionaireContent("–í–æ–ø—Ä–æ—Å—ã –ú–∏–ª–ª–∏–æ–Ω–µ—Ä");
	public static int level;
	public AskMillionaire ask = new AskMillionaire();
	private boolean flagReturn = false;
	private static String numberQuestions = "";
	private Message message = null;
	private Bot bot;
	
	public Millionaire(Bot bot)
	{
		level = 1;
		this.bot = bot;
		this.message = bot.message;
	}
			
	public Message reply(Message userInput)
	{
		String botAnswer = "";	
		ArrayList<String> row = new ArrayList<>();
		ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
		numberQuestions = "–í–æ–ø—Ä–æ—Å ‚Ññ" + level + ":\n";
		if (flagReturn)
		{
			if (userInput.getTextMessage().equals("–Ω–µ—Ç"))
			{
				bot.fsm.stackReboot(bot::start);
				message.setTextMessage("–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è, –∫–∞–∫-–Ω–∏–±—É–¥—å —Å—ã–≥—Ä–∞–µ–º –µ—â–µ!ü¶Ü");
				row.add("–Ø —Å–∫—É—á–∞—é!");
			    keyboard.add(row);
			    message.setKeyboard(keyboard);
				return message;
			}
			if (userInput.getTextMessage().equals("–¥–∞"))
			   flagReturn = false;
			else
			{
				message.setTextMessage("–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª :(");
				return message;
			}
		}
		if (level == 1) 
		{
			ask = reader.nextAsk(level);
			botAnswer = ask.stringAsk();
		    level++;
		    message.setTextMessage(numberQuestions + botAnswer);	
		    setAnswerChoise(row, keyboard);
			row = new ArrayList<>();
			bot.setHelpAndTired(row, keyboard);
			return message;
		}
		else
		{
		    return gameNext(userInput);
		}			
	}
	
	public void setAnswerChoise(ArrayList<String> row, ArrayList<ArrayList<String>> keyboard)
	{
		row.add("1");
		row.add("2");
		row.add("3");
		row.add("4");
		keyboard.add(row);
	}
	
	public Message gameNext(Message userInput) throws NumberFormatException
	{
		String botAnswer = "";
		ArrayList<String> row = new ArrayList<>();
		ArrayList<ArrayList<String>> keyboard = new ArrayList<>();
		try 
		{
			if (!(userInput.getTextMessage().equals("1")
					|| userInput.getTextMessage().equals("2") 
					|| userInput.getTextMessage().equals("3")
					|| userInput.getTextMessage().equals("4")))
				throw new NumberFormatException(); 
			if (ask.checkAsk(Integer.parseInt(userInput.getTextMessage()))) 
			{		
				if (level == 13)
				{
					flagReturn = true;
					level = 1;
					message.setTextMessage("–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –ø–æ–±–µ–¥–∏–ª –≤ –∏–≥—Ä–µ \"–ú–∏–ª–ª–∏–æ–Ω–µ—Ä\"!üèÜ –¢–≤–æ–π –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª 1200 –æ—á–∫–æ–≤! \n–°—ã–≥—Ä–∞–µ–º –µ—â—ë —Ä–∞–∑–æ–∫?üòè –û—Ç–≤–µ—á–∞–π \'–¥–∞\'üëç –∏–ª–∏ \'–Ω–µ—Ç\'üëé");
					row.add("–î–∞");
					row.add("–ù–µ—Ç");
					keyboard.add(row);
					row = new ArrayList<>();
					bot.setHelpAndTired(row, keyboard);
					return message;
				}
				ask = reader.nextAsk(level);
				botAnswer = ask.stringAsk();
				numberQuestions = "–í–æ–ø—Ä–æ—Å ‚Ññ" + level + ":\n";
				level++;
				message.setTextMessage("–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª " + 100 * (level - 2) + " –æ—á–∫–æ–≤!‚úã –í–Ω–∏–º–∞–Ω–∏–µ, —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å!üîî \n" + numberQuestions + botAnswer);
				setAnswerChoise(row, keyboard);
			}
			else 
			{				
				if ((level - 1) / 3 != 0) 
				{
					int point;
					point = ((level - 1) / 3) * 3 * 100;
					message.setTextMessage("–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ " + point + " –æ—á–∫–æ–≤, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—Å—è –ª—É—á—à–µ!üòâüëå \n –ï—â—ë —Ä–∞–∑–æ–∫?üòè  –û—Ç–≤–µ—á–∞–π \'–¥–∞\'üëç –∏–ª–∏ \'–Ω–µ—Ç\'üëé");					
				}
				else 
				{
					message.setTextMessage("–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏!üò£ –ï—â—ë —Ä–∞–∑–æ–∫?üòè –û—Ç–≤–µ—á–∞–π \'–¥–∞\'üëç –∏–ª–∏ \'–Ω–µ—Ç\'üëé");					
				}
				level = 1;
				flagReturn = true;			
				row.add("–î–∞");
				row.add("–ù–µ—Ç");
				keyboard.add(row);	
			}
			row = new ArrayList<>();
			bot.setHelpAndTired(row, keyboard);
			return message;
		}
		catch(NumberFormatException e)
		{
			message.setTextMessage("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1‚É£ –¥–æ 4‚É£.");
			return message;
		}
	}
}